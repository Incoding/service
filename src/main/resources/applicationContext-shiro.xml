<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
    <!-- 数据库连接池 -->
    <bean id="dataSourceShiro" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${service.jdbc.driver}"/>
        <property name="url" value="${service.jdbc.url}"/>
        <property name="username" value="${service.jdbc.username}"/>
        <property name="password" value="${service.jdbc.password}"/>
    </bean>
    <!-- Base DAO -->
    <bean id="baseDao" abstract="true">
        <property name="dataSource" ref="dataSourceShiro"/>
    </bean>

    <!-- DAO -->
    <bean id="permissionDao" class="com.aicai.service.shiro.dao.PermissionDaoImpl" parent="baseDao"/>
    <bean id="roleDao" class="com.aicai.service.shiro.dao.RoleDaoImpl" parent="baseDao"/>
    <bean id="userDao" class="com.aicai.service.shiro.dao.UserDaoImpl" parent="baseDao"/>

    <!-- Service -->
    <bean id="permissionService" class="com.aicai.service.shiro.service.PermissionServiceImpl">
        <property name="permissionDao" ref="permissionDao"/>
    </bean>

    <bean id="roleService" class="com.aicai.service.shiro.service.RoleServiceImpl">
        <property name="roleDao" ref="roleDao"/>
    </bean>

    <bean id="passwordHelper" class="com.aicai.service.shiro.util.PasswordHelper">
        <property name="algorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>

    <bean id="userService" class="com.aicai.service.shiro.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="passwordHelper" ref="passwordHelper"/>
    </bean>



    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>



    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean id="myRealm" class="com.aicai.service.shiro.realm.UserRealm">
        <property name="userService" ref="userService"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login.jsp"/>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /index.jsp = anon
                /unauthorized.jsp = anon
                /login.jsp = authc
                /logout = logout
                /** = user
            </value>
        </property>
    </bean>

</beans>